{
  "type" : "sfdc_cms__appPage",
  "title" : "main",
  "contentBody" : {
    "currentThemeId" : "B2C_Commerce",
    "headMarkup" : "<!-- branding stylesheets -->\n\n<link rel=\"stylesheet\" href=\"{ basePath }/assets/styles/salesforce-lightning-design-system.min.css?{ versionKey }\"/>\n<link rel=\"stylesheet\" href=\"{ basePath }/assets/styles/dxp-site-spacing-styling-hooks.min.css?{ versionKey }\" />\n<link rel=\"stylesheet\" href=\"{ basePath }/assets/styles/dxp-styling-hooks.min.css?{ versionKey }\" />\n<link rel=\"stylesheet\" href=\"{ basePath }/assets/styles/dxp-slds-extensions.min.css?{ versionKey }\" />\n\n\n\n<link rel=\"preload\" href=\"{ basePath }/assets/fonts/webfonts/SalesforceSans-Light.woff2\" as=\"font\" type=\"font/woff2\" crossorigin=\"anonymous\" fetchPriority=\"low\"/>\n<link rel=\"preload\" href=\"{ basePath }/assets/fonts/webfonts/SalesforceSans-Regular.woff2\" as=\"font\" type=\"font/woff2\" crossorigin=\"anonymous\" fetchPriority=\"low\"/>\n<link rel=\"preload\" href=\"{ basePath }/assets/fonts/webfonts/SalesforceSans-Bold.woff2\" as=\"font\" type=\"font/woff2\" crossorigin=\"anonymous\" fetchPriority=\"low\"/>\n<!-- branding stylesheets -->\n\n<!-- General -->\n<link rel=\"shortcut icon\" href=\"{basePath}/assets/favicon.ico?{versionKey}\">\n<link rel=\"stylesheet\" href=\"{basePath}/assets/css/theme2.css?{versionKey}\">\n<link rel=\"stylesheet\" href=\"{ styles/styles.css }\" />\n\n<script>\n    const scriptNodeObserverConfig = { characterData: false, attributes: false, childList: true, subtree: true };\n    const scriptNodeObserver = new MutationObserver( (mutationsList) => {\n        mutationsList.forEach( (mutation) => {\n            if (mutation.target.localName == \"div\") {\n                const textContent = mutation.addedNodes[0]?.textContent;\n                if (textContent?.includes('\"isGuest\":true') || (textContent?.includes('\"isGuest\":false') && textContent?.includes('\"crmId'))) {\n                \t//trigger set-consent\n                    document.dispatchEvent(\n                        new CustomEvent('experience_interaction', {\n                            bubbles: true,\n                            composed: true,\n                            detail: {\n                                name: 'set-consent',\n                                value: true,\n                            },\n                        })\n                    );\n                    //trigger page-view\n                    document.dispatchEvent(\n                        new CustomEvent('experience_interaction', {\n                            bubbles: true,\n                            composed: true,\n                            detail: {\n                                name: 'page-view'\n                            },\n                        })\n                    );\n                \tscriptNodeObserver.disconnect();\n                \tobserver.disconnect();\n                }\n            }\n        });\n    });\n    const config = { characterData: false, attributes: false, childList: true, subtree: true };\n    const observer = new MutationObserver( (mutationsList) => {\n        mutationsList.forEach( (mutation) => {\n            if (mutation.target.nodeName.toUpperCase() == \"DXP_DATA_PROVIDER-USER-DATA-PROVIDER\") {\n                scriptNodeObserver.observe(mutation.target, scriptNodeObserverConfig);\n            }\n        });\n    });\n    observer.observe(document, config);\n</script>\n\n<script type = 'text/javascript'>\n\tvar user;\nwindow.addEventListener('userDetails', function(e) {\n\tconsole.log('user details: ' + JSON.stringify(e.detail));\n\tuser = e.detail;\n});\n window.addEventListener(\"onEmbeddedMessagingReady\",e => {\n     embeddedservice_bootstrap.prechatAPI.setHiddenPrechatFields({\n\"UserID\": user.id,\n\"User_Email\": user.email,\n\"ContactId\": user.contactId  \n});\n });\n\n</script>\n\n\n    <script src=\"https://cdn.c360a.salesforce.com/beacon/c360a/49cd2aa6-e61a-4c55-a0ba-b2e26b62685e/scripts/c360a.min.js\"></script>\n    <script>\n        //Initialize the SDK\n        SalesforceInteractions.init(); \n        SalesforceInteractions.sendEvent({\n    interaction: {\n        name: 'View Catalog Object',\n        catalogObject: {\n            type: 'Product',\n            id: this.selectedProduct.Id,\n        }\n    }\n});\n        // Set the logging level for debugging purposes\n        SalesforceInteractions.setLoggingLevel(4); \n    </script>\n\n<script>\n    var userId;\n\nfunction callPrechatAPI() {\n    // get UserId of the logged in Experience Site User\n    userId = $A.get('$SObjectType.CurrentUser.Id');\n    console.log('Passing UserId = userId (currently Logged In User Id, or ' + userId + ')');\n    // Send it!\n    embeddedservice_bootstrap.prechatAPI.setHiddenPrechatFields({\n        \"UserID\": userId\n    });\n}\n\nfunction trapButtonClick() {\n    console.log('Looking for embeddedMessagingConversationButton...');\n    var b = document.getElementById('embeddedMessagingConversationButton');\n    if (b != null) {\n        console.log('Found it, attaching to onClick event');\n        b.addEventListener('click', callPrechatAPI);\n    } else {\n        console.log('No button yet; wait a second and try again');\n        setTimeout(trapButtonClick, 1000);\n    }\n}\nwindow.addEventListener(\"onEmbeddedMessagingReady\", () => {\n    console.log('Received the onEmbeddedMessagingReady event...');\n    callPrechatAPI();\n});\n\nwindow.addEventListener(\"load\", trapButtonClick); \n</script>",
    "isLockerServiceEnabled" : true,
    "isRelaxedCSPLevel" : true,
    "templateName" : "b2c-lite-storefront"
  },
  "urlName" : "main"
}